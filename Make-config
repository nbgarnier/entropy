#################################################################
# Makefile definitions                                          #
#################################################################
# 2012-02-28                                                    #
#################################################################
# edit this file to suit your needs                             #
#################################################################

PLATFORM = MACOS
# LINUX, LINUX64, MACOS, PSMN or WIN64

# choose the line(s) you want and comment the others
CC = gcc #-stdlib=libc++ # for macos
#CC = gcc-9 # homebrew C compiler on Macos
#CC = gcc-4.9 # for Matlab 2017b on iode, 2018-04-25, and on phycalc1, 2020-06-02
#CC = icc   

CPP = g++
#CPP = g++-9 # homebrew C++ compiler on macos (2019)
#CPP = g++-4.9 # for Matlab 2017b on iode, 2018-04-25, and on phycalc1, 2020-06-02

#OPT_FLAGS = -I/opt/local/include # for macports on Macos
#OPT_FLAGS = -I/usr/local/include # for homebrew on Macos
#LDFLAGS = -L/opt/local/lib # for macports on Macos
#LDFLAGS = -L/usr/local/lib # for homebrew on Macos

LIBTOOL = libtool # for Macos libtool (clang)
#LIBTOOL = glibtool # for homebrew on Macos

PYTHON = python3
#PYTHON = /usr/local/opt/python/libexec/bin/python # python executable, to produce python library

#MATLAB = /usr/local/MATLAB/R2017b   # linux R2D4 on 2018-11-20
#MATLAB = /Applications/MATLAB_R2020b.app/ # for Macos (Steph, on 2021-10-20)
MATLAB = /Applications/MATLAB_R2021b.app/ # for Macos
#MATLAB = /usr/local/softs/matlab/2017b # phycalc1 on 2020-06-02



#################################################################
# following can also be changed, but usually not necessary !    #
#################################################################
# optimization and linking flags :
OPT_FLAGS	+= -pedantic -Wall -Wextra -Wshadow -Wpointer-arith -Wundef -Wunreachable-code
ifeq ($(PLATFORM),VALGRIND) # macos valgrind version (2023-03-04)
	OPT_FLAGS += -O0 -g -mmacosx-version-min=12
	LDLIBS += -lcblas
	MAKELIB = $(LIBTOOL) -arch_only x86_64 -static -o
else
	OPT_FLAGS += -O3 -fPIC
endif
# -funroll-all-loops
MAKE_SO = libtool -dynamic -o # for dynamic library (used only by ANN)
RANLIB    = true

LDFLAGS += -lm -lgsl -lfftw3 # 

ifeq ($(PLATFORM),LINUX)
	LDFLAGS  += -fopenmp -lcblas
#	MATLAB    = /srv/sys/dist/matlab/R2010a   # Debian Linux machines in ENS-Lyon Physics lab
#	MATLAB    = /srv/sys/dist/matlab/R2012a/  # cobalt on 2014-01-15
#	MATLAB    = /srv/sys/dist/matlab/R2014b   # yttrium on 2015-09-30
	MATLAB    = /usr/local/softs/matlab/2017b # iode on 2018-04-23
	MAKELIB   = ar ruv
endif
ifeq ($(PLATFORM),LINUX64)
	LDFLAGS  += -fopenmp 
	LDLIBS   += -lgslcblas
	MAKELIB   = ar ruv
endif
ifeq ($(PLATFORM),LINUX_PHYCALC)
	OPT_FLAGS += -march=native
	LDFLAGS  += -fopenmp #-lcblas
	MATLAB    = /srv/sys/dist/matlab/R2012a   # Debian Phycalc Linux machines in ENS-Lyon Physics lab
	MATLAB    = /usr/local/MATLAB/R2021b
	MAKELIB   = ar ruv
endif
ifeq ($(PLATFORM),PSMN)
	OPT_FLAGS += -I../gsl-1.14/
	LDFLAGS	  += -L/home/ngarnier/lib/ # gsl lib is local
	MATLAB     = /softs/matlabR2009a	# PSMN, as of 2012-01-01
	MAKELIB    = ar ruv
endif
ifeq ($(PLATFORM),MACOS)
#	CFLAGS	+= -march=corei7 # only working with recent gcc, like 4.6 (not 4.2.1)
#	CC = gcc -mmacosx-version-min=10.9 # -stdlib=libc++ # for macos
#	OPT_FLAGS += -fPIC -mmacosx-version-min=10.9
#	OPT_FLAGS += -fPIC -mmacosx-version-min=10.12
#	OPT_FLAGS += -fPIC -mmacosx-version-min=10.14 # changed 2022-11-30
	OPT_FLAGS += -mmacosx-version-min=12
#	CPP    +=  -arch x86_64
#	LDFLAGS += -stdlib=libstdc++
	LDLIBS += -lcblas
	MAKELIB = $(LIBTOOL) -arch_only x86_64 -static -o
endif
ifeq ($(PLATFORM),WIN64)
	CPP    += -march=native
	MAKELIB = ar ruv
endif

# CFLAGS is for C, CXXFLAGS is for C++, and CPPFLAGS is for both
CFLAGS	  = $(OPT_FLAGS) -std=c99 -g -pthread
CPPFLAGS  = $(OPT_FLAGS)
LDFLAGS  += $(OPT_FLAGS) -pthread

# following is to respect the new source tree :
INCLUDE   = ../include
CFLAGS   += -I$(INCLUDE)
CPPFLAGS += -I$(INCLUDE)
# LDFLAGS += -L../lib


#################################################################
# following is for archive creation                             #
#################################################################
TAR = tar
ifeq ($(PLATFORM),MACOS)
        TAR =COPYFILE_DISABLE=1 tar
endif



#################################################################
# following is for Lapack (not used anymore)                    #
#################################################################
# LDFLAGS_CLAPACK  = -faltivec -framework vecLib -L/sw/lib    # macOS
# -llapack -lcblaswr -lcblas -lf77blas -latlas -lf2c -lm
# LDFLAGS_CLAPACK = -llapack -lcblas
